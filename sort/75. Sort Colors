/*
结合三路快排 partition 思路的应用。

设定两个索引，一个从左往右滑动zero，一个从右往左滑动two。

遍历nums，当nums[i]的值为1时，i++；
当nums[i]的值为2时，two的值先减1，而后交换nums[i]与nums[two]，此时在观察nums[i]的值；
当nums[i]的值为0时，zero++，而后交换nums[i]与nums[zero]，i++;当 i = two时，结束循环。
 */
class Solution {
public:
    void sortColors(vector<int>& nums) {
        if(nums.empty())
            return;
        int zero=-1,two=nums.size();
        for (int i = 0; i < two; ++i) {
            if(nums[i]==1)i++;
            else if(nums[i]==2){
                two--;
                swap(nums[i],nums[two]);
            }else{
                zero++;
                swap(nums[i],nums[zero]);
                i++;
            }
        }
    }
};
