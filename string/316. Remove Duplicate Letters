class Solution {
public:
    /*
     使用一个map先记录每个字符出现的个数，由于他需要最小的字典序，
     我们先在res字符串中加入0（最小的字典序）然后遍历s
     若没访问过则直接跳过，没访问过则
     循环对比res串的最后一个值的大小，如果比这个值小并且这个值对应的hash值不为0（代表后面还会出现这个值），
     则把这个值删除，并设置为未访问，
     最后把当前的字符a加入并设置为访问过
     */
    string removeDuplicateLetters(string s) {
        string res="0";
        int m[256]={0},visited[256]={0};
        for(auto a:s)m[a]++;
        for(auto a:s){
            m[a]--;//访问要减少
            if(visited[a])continue;
            while(a<res.back()&&m[res.back()]){
                visited[res.back()]=0;
                res.pop_back();
            }
            res.push_back(a);
            visited[a]=1;
        }
        return res.substr(1);
    }
};
