/*
 而这道题好就好在没有让我们来验证输入字符串是不是罗马数字，这样省掉不少功夫。
 我们需要用到HashMap数据结构，来将罗马数字的字母转化为对应的整数值，
 因为输入的一定是罗马数字，那么我们只要考虑两种情况即可：
第一，如果当前数字是最后一个数字，或者之后的数字比它小的话，则加上当前数字。
第二，其他情况则减去这个数字。

 */

class Solution {
public:
    int romanToInt(string s) {
        int res=0;
        unordered_map<char,int> m{{'I',1},{'V',5},{'X',10},{'L',50},{'C',100},{'D',500},{'M',1000}};
        for (int i = 0; i < s.size(); ++i) {
            int val=m[s[i]];
            if(i==s.size()-1||val>=m[s[i+1]]){
                res+=val;
            }
            else{
                res-=val;
            }
        }
        return res;
    }
};
