public class Solution {


    int res=0;
    void calc(int[] A,int n){
        int dp[]=new int[n];
        int i;
        for (i=0;i<n;++i){
            dp[i]=1;
            if (i>0&&A[i-1]<A[i]){
                dp[i]=dp[i-1]+1;
            }
            if (res<dp[i]){
                res=dp[i];
            }
        }
        //前面有值
        //当前结果更大更新
    }

    /**
     * @param A: An array of Integer
     * @return: an integer
     */
    public int longestIncreasingContinuousSubsequence(int[] A) {
        // write your code here
        int n=A.length;
        if(n==0)return 0;
        calc(A,n);
        //反转
        int i=0,j=n-1,t;
        while(i<j){
            t=A[i];
            A[i]=A[j];
            A[j]=t;
            ++i;
            --j;
        }
        calc(A,n);
        return res;
    }
}
