public class Solution {
    /**
     * @param obstacleGrid: A list of lists of integers
     * @return: An integer
     */
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        // write your code here
        int m,n;
        m=obstacleGrid.length;
        if (m==0)return 0;
        n=obstacleGrid[0].length;
        if (n==0)return 0;
        if (obstacleGrid[m-1][n-1]==1)return 0;
        int[][] dp=new int[m][n];
        dp[0][0]=1;
        for (int i=0;i<m;i++){
            for (int j=0;j<n;j++){
                if (obstacleGrid[i][j]==1){
                    dp[i][j]=0;
                }
                
                else{
                    //只要有左边就加上左边，有上面就加上上面
                    if (i-1>=0) dp[i][j]+=dp[i-1][j];
                    if (j-1>=0) dp[i][j]+=dp[i][j-1];
                } 
            }
        }
        return dp[m-1][n-1];
    }
}
