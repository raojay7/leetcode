import javafx.util.Pair;

import java.util.*;

class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        List<Integer> res=new ArrayList<>();
        Map<Integer,Integer> map=new HashMap<>();
        PriorityQueue<Pair<Integer,Integer>> queue=new PriorityQueue<>(new Comparator<Pair<Integer, Integer>>() {
            @Override
            public int compare(Pair<Integer, Integer> o1, Pair<Integer, Integer> o2) {
                return o2.getKey()-o1.getKey();
            }
        });
        for (int i = 0; i < nums.length ;i++) {
            map.put(nums[i],map.get(nums[i])==null?1:map.get(nums[i])+1);
        }
        for(Integer integer:map.keySet()){
            queue.offer(new Pair<>(map.get(integer),integer));
        }

        for (int i = 0; i < k; i++) {
            res.add(queue.poll().getValue());
        }
        return res;
    }


}
